{
  "general": {
    "username": "Username",
    "password": "Password",
    "ok": "Okay",
    "name": "Name",
    "description": "Description",
    "rename": "Rename",
    "options": "Options",
    "warning": "Warning",
    "delete": "Delete",
    "cancel": "Cancel",
    "save": "Save",
    "close": "Close",
    "url": "URL",
    "edit": "Edit",
    "viewDetails": "View details",
    "done": "Done",
    "confirm": "Confirm"
  },
  "menu": {
    "home": "Home",
    "projectManagement": {
      "projectManagement": "Project Management",
      "projects": "Projects",
      "namespaces": "!alias:views.namespaces.namespaces"
    },
    "administration": {
      "administration": "Administration",
      "dockerRegistries": "Docker Registries",
      "helmRegistries": "Helm Registries",
      "users": "Users",
      "activityLog": "!alias:views.logs.activityLog"
    }
  },
  "views": {
    "login": {
      "doLogin": "Login"
    },
    "logs": {
      "activityLog": "Event Log"
    },
    "deploymentsDashboard": {
      "activeDeployments": "Active Deployments"
    },
    "namespaces": {
      "namespaces": "Namespaces"
    }
  },
  "components": {
    "themeSwitcher": {
      "auto": "Auto",
      "light": "Light",
      "dark": "Dark"
    },
    "activityLog": {
      "openEntity": "Open {entity}",
      "openUsersPage": "Open user list",
      "openDockerRegistryPage": "Open docker registry list",
      "openNamespacesPage": "Open namespaces list",
      "changedProperty": "Changed property",
      "newActivities": "{count} new {count, plural, one{event} other{events}}"
    },
    "deployableActions": {
      "deploy": "Deploy",
      "reDeploy": "Re-Deploy",
      "stop": "Stop"
    },
    "deployableStatus": {
      "runningOutdated": "This deployment is running with an outdated configuration",
      "NotScheduled": "Not scheduled",
      "Unknown": "Unknown",
      "Failed": "Failed",
      "Succeeded": "Succeeded",
      "Pending": "Pending",
      "Running": "Running"
    },
    "showDeployableConfigurationDialog": {
      "effectiveConfigurationOfEntity": "Effective configuration of {entity}",
      "calculatedConfiguration": "Calculated configuration",
      "availableConfigurationParameters": "Available configuration parameters"
    },
    "templateEditor": {
      "editConfigurationTemplateDialog": {
        "nameAlreadyInUse": "The name is already in use by another template"
      },
      "uploadFailedError": "Could not upload file {filename}",
      "confirmDeletionOfTemplate": "Do you really want to delete this template?",
      "uploadYaml": "Upload YAML file",
      "createNewTemplate": "Create new template",
      "downloadCurrentFile": "Download current file",
      "thisIsAnInheritedConfiguration": "This is an inherited configuration.",
      "overwritesInheritedConfiguration": "This overwrites an inherited configuration.",
      "chartRegistry": "Chart registry",
      "chartName": "Chart name",
      "chartVersion": "Chart version",
      "chartVersionPlaceholder": "Leave blank for latest version",
      "noTemplatesAvailable": "No configuration templates.",
      "createTemplateHelpInfo": "Create a new template here:"
    },
    "dockerRegistry": {
      "deletionDialog": {
        "registryIsUsedByProject": "The docker registry <b>{registry}</b> is used by these projects:",
        "usedRegistryWarningText": "<p>If you delete this registry then those projects will remain in an orphaned state.</p><p>They can no longer be deployed or used otherwise until they are assigned to a new registry serving images with the same name.</p>",
        "confirmDeletionText": "Please confirm the deletion of this docker registry by entering its name below. This action cannot be undone.",
        "confirmName": "!alias:components.forms.confirmName"
      },
      "editDialog": {
        "createRegistry": "Create Docker Registry",
        "editRegistry": "Edit Docker Registry",
        "trustInsecureCertificates": "Trust insecure certificates",
        "trustInsecureRegistryHint": "You should not check this if you are running O-Neko in production. Make sure to install valid and trusted certificates in your registry instead. You also have to make sure that your Kubernetes cluster trusts your registry. Otherwise even setting this option will not help you.",
        "registryHasBeenModifiedByAction": "Docker Registry {registry} has been {action, select, created{created} deleted{deleted} saved{saved} other{modified}}."
      },
      "registryUrl": "Registry URL",
      "dockerRegistries": "!alias:menu.administration.dockerRegistries",
      "createDockerRegistry": "!alias:components.dockerRegistry.editDialog.createRegistry",
      "trustsInsecureCertificates": "O-Neko is configured to trust insecure certificates from this registry.",
      "doesNotTrustInsecureCertificates": "O-Neko does not trust insecure certificates from this registry."
    },
    "helmRegistry": {
      "deletionDialog": {
        "registryIsUsedByProject": "The helm registry <b>{registry}</b> is used by these projects:",
        "usedRegistryWarningText": "<p>If you delete this registry then those projects will remain in an orphaned state.</p><p>They can no longer be deployed or used otherwise until they are assigned to a new registry serving images with the same name.</p>",
        "confirmDeletionText": "Please confirm the deletion of this helm registry by entering its name below. This action cannot be undone.",
        "confirmName": "!alias:components.forms.confirmName"
      },
      "editDialog": {
        "createRegistry": "Create Helm Registry",
        "editRegistry": "Edit Helm Registry",
        "registryHasBeenModifiedByAction": "Helm Registry {registry} has been {action, select, created{created} deleted{deleted} saved{saved} other{modified}}."
      },
      "registryUrl": "Registry URL",
      "helmRegistries": "!alias:menu.administration.helmRegistries",
      "createHelmRegistry": "!alias:components.helmRegistry.editDialog.createRegistry"
    },
    "forms": {
      "errors": {
        "fieldIsRequired": "This field is required.",
        "passwordsMustMatch": "The passwords must match."
      },
      "changePassword": "Change password",
      "repeatPassword": "Repeat password",
      "confirmName": "Confirm name",
      "deploymentBehaviourInput": {
        "deploymentBehaviour": "Deployment behaviour",
        "automatically": "Deploy new images automatically",
        "manually": "Deploy new images only on user request",
        "required": "You must set a deployment behaviour"
      },
      "keyValueInput": {
        "parameterName": "Parameter name",
        "parameterValueFor": "Parameter value for {key}",
        "addVariable": "Add variable"
      },
      "lifetimeBehaviourInput": {
        "lifetimeBehaviour": "Lifetime behaviour",
        "days": "{count} {count, plural, one{Day} other{Days}}",
        "weeks": "{count} {count, plural, one{Week} other{Weeks}}",
        "infinite": "Infinite",
        "hint": "Choose how long deployed resources should be kept alive after their last deployment"
      },
      "fileUpload": {
        "dndFiles": "Drag and drop files here",
        "upload": "Upload"
      },
      "navigation": {
        "account": "Account",
        "logout": "Logout"
      }
    },
    "namespace": {
      "createDialog": {
        "define": "Define Namespace",
        "description": "You are about to define a new namespace in O-Neko. You totally can type in a namespace that already exists in Kubernetes.<br/>If you define a namespace that is not yet existing then it will not be created until a project version using this namespace really is deployed.",
        "errorPattern": "The name must only contain alpha-numeric lowercase characters and dashes inbetween.",
        "errorMaxLength": "The name must be 63 characters or less."
      },
      "namespaceAction": "The namespace {namespace} has been {action, select, created{created} deleted{deleted} other{modified}}.",
      "deleteDialog": {
        "deleteNamespace": "Delete {namespace}?",
        "disclaimer": "Disclaimer",
        "description": "<p>You are about to delete the defined namespace <b>{namespace}</b>. All project versions currently using this namespace will fall back to their default namespace.</p><p>This will not remove these namespace from Kubernetes.</p><p>Please confirm this deletion by entering the namespace below. This action cannot be undone.</p>"
      },
      "createNamespace": "Create namespace"
    },
    "project": {
      "createProjectDialog": {
        "createNewProject": "Create a new project",
        "importProject": "Import a project",
        "importProjectConfigurationFile": "Import a project configuration file",
        "importProjectDescription": "Import a project from a <i>.json</i> configuration file. You can configure the import in the next steps.",
        "fileUploadLabel": "Upload project configuration",
        "uploadSuccessful": "Upload successful!",
        "importCompleteDescription": "The imported project contains <b>{count}</b> configuration templates.",
        "next": "Next",
        "back": "Back",
        "enterProjectNameLabel": "Enter the new project's name",
        "enterProjectNameDescription": "<p>Enter a meaningful name for your new project.</p><p>The name can be chosen arbitrarily but should be distinguishable from the names of yet existing projects.</p>",
        "projectName": "Project name",
        "collidingProjectNameMessage": "There is already a project with the name {name}.",
        "selectDockerRegistry": "Select a docker registry",
        "selectDockerRegistryDescription": "All docker images for this project will be picked from the docker registry you select here.",
        "dockerRegistry": "Docker registry",
        "enterProjectImageName": "Enter the new project's image name",
        "enterProjectImageNameDescription": "Type in the name of the docker image. This must match the image name as present in the docker registry.",
        "couldNotUploadFile": "Could not upload file {name}",
        "errorParsingConfiguration": "Error while parsing the configuration file"
      },
      "projectDashboard": {
        "projects": "Projects",
        "projectHasNoDeployedVersions": "<strong>{name}</strong> has no deployed versions."
      },
      "editProject": {
        "editProject": "Edit project",
        "showVersions": "Show versions",
        "projectName": "Project name",
        "projectNameIsRequired": "A project name is required",
        "imageName": "Image name",
        "imageNameIsRequired": "An image name is required",
        "dockerRegistry": "!alias:components.project.createProjectDialog.dockerRegistry",
        "dockerRegistryIsRequired": "Each project must have a docker registry assigned.",
        "namespaceInKubernetes": "Namespace in Kubernetes",
        "configurationTemplates": "Configuration templates",
        "templateVariables": "Template Variables",
        "defaultLifetimeBehaviour": "Default lifetime behaviour",
        "saveProject": "Save project",
        "exportProject": "Export project",
        "deleteProject": "Delete project"
      },
      "editVersion": {
        "versions": "Versions",
        "editProjectVersion": "Edit Project Version",
        "deploymentUrls": "Deployment URLs",
        "projectVersionName": "Project version name",
        "belongingToProject": "Belonging to project",
        "namespaceInKubernetes": "Namespace in Kubernetes",
        "inheritFromProject": "Inherit from project",
        "configurationTemplate": "Configuration Template",
        "inheritedVariables": "Inherited variables",
        "versionSpecificVariables": "Version specific variables",
        "showEffectiveConfiguration": "Show effective configuration"
      },
      "list": {
        "projects": "!alias:menu.projectManagement.projects",
        "createProject": "Create Project",
        "importProject": "Import Project",
        "columns": "Columns",
        "imageName": "Image name",
        "status": "Status",
        "versions": "Versions",
        "orphaned": "Orphaned",
        "pending": "Pending",
        "error": "Error",
        "notDeployed": "Not deployed",
        "versionCount": "{count} versions"
      },
      "templateVariables": {
        "addTemplateVariable": "Add template variable",
        "newTemplateVariableName": "New_{index}",
        "newTemplateVariableLabel": "New {index}",
        "deleteDialog": {
          "title": "Delete Template Variable?",
          "confirm": "Delete"
        },
        "editor": {
          "technicalName": "Technical Name",
          "label": "Label",
          "showOnDashboard": "Show on dashboard",
          "useValues": "Use pre-defined values",
          "isDefaultValue": "make default value",
          "removeValue": "Remove value",
          "addValue": "Add value",
          "defaultValue": "Default value",
          "selectTemplateVariable": "Please select a template variable"
        }
      },
      "versionList": {
        "name": "Name",
        "imageUpdatedDate": "Image Updated Date",
        "deploymentUrl": "Deployment URL",
        "deploymentDate": "Deployment Date",
        "deploymentStatus": "Deployment Status",
        "filterVersionsByName": "Filter by name",
        "columns": "Columns"
      },
      "service": {
        "deleteDialog": {
          "title": "Delete {name}?",
          "message": "Please confirm the deletion of this project by entering the project name below. This action cannot be undone.",
          "confirmPlaceholder": "Confirm project name",
          "okButtonText": "Delete"
        },
        "projectSnackbarMessage": "Project {name} has been {action, select, created{created} saved{saved} deleted{deleted} other{modified}}.",
        "versionSnackbarMessage": "Project {name} version {version} has been {action, select, deployed{deployed} stopped{stopped} other{modified}}.",
        "errorMessage": "Error: {message}"
      }
    },
    "user": {
      "editDialog": {
        "title": "{action, select, create{Create} edit{Edit} other{Edit}} User",
        "username": "Username",
        "changeUsernameWarning": "Changing your username will require you to sign in again.",
        "usernameRequired": "A username is required.",
        "usernameUnavailable": "This username is not available.",
        "role": "Role",
        "roleRequired": "A role is required for every user.",
        "email": "E-Mail",
        "emailRequired": "An email address is required.",
        "enterValidMail": "Please enter a valid email address.",
        "emailUnavailable": "This email is not available.",
        "firstName": "First name",
        "lastName": "Last name",
        "password": "Password",
        "passwordIsRequired": "A password is required.",
        "verifyPassword": "Verify your password by entering it again.",
        "passwordsMustMatch": "The passwords must match.",
        "changePassword": "Change password"
      },
      "list": {
        "userManagement": "User Management",
        "createUser": "Create User",
        "columns": "Columns",
        "username": "Username",
        "email": "E-Mail",
        "firstName": "First name",
        "lastName": "Last name",
        "role": "Role",
        "deleteDialog": {
          "title": "Delete {username}?",
          "message": "Please confirm the deletion of this user by entering the username below. This action cannot be undone.",
          "confirmationPlaceholder": "Confirm username",
          "okButtonText": "Delete"
        }
      },
      "me": {
        "username": "Username",
        "email": "E-Mail",
        "firstName": "First name",
        "lastName": "Last name",
        "role": "Role",
        "deleteAccount": "Delete account",
        "deleteDialog": {
          "title": "Delete your account?",
          "message": "Please confirm the deletion of your account. This action cannot be undone.",
          "okButtonText": "Delete"
        }
      }
    }
  },
  "material": {
    "paginator": {
      "nextPage": "Next page",
      "lastPage": "Last page",
      "previousPage": "Previous page",
      "firstPage": "First page",
      "itemsPerPage": "Items per page:",
      "itemsVisible": "{from}-{to} of {length}"
    }
  }
}
